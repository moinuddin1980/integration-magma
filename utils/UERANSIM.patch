diff --git a/lte/gateway/c/core/oai/tasks/ngap/ngap_amf_decoder.c b/lte/gateway/c/core/oai/tasks/ngap/ngap_amf_decoder.c
index 53c262006..f27e764f9 100644
--- a/lte/gateway/c/core/oai/tasks/ngap/ngap_amf_decoder.c
+++ b/lte/gateway/c/core/oai/tasks/ngap/ngap_amf_decoder.c
@@ -40,6 +40,33 @@ int ngap_amf_decode_pdu(Ngap_NGAP_PDU_t* pdu, const_bstring const raw) {
                         blength(raw), 0, 0);
 
   if (dec_ret.code != RC_OK) {
+    uint8_t digit1, digit2, digit3;
+    digit1 = (amf_config.guamfi.guamfi[0].plmn.mcc_digit2 << 4) |
+             (amf_config.guamfi.guamfi[0].plmn.mcc_digit1);
+    if (amf_config.guamfi.guamfi[0].plmn.mnc_digit3 != 0xf) {
+      digit2 = (amf_config.guamfi.guamfi[0].plmn.mnc_digit1 << 4) |
+               (amf_config.guamfi.guamfi[0].plmn.mcc_digit3);
+      digit3 = (amf_config.guamfi.guamfi[0].plmn.mnc_digit3 << 4) |
+               (amf_config.guamfi.guamfi[0].plmn.mnc_digit2);
+    } else {
+      digit2 = (amf_config.guamfi.guamfi[0].plmn.mnc_digit3 << 4) |
+               (amf_config.guamfi.guamfi[0].plmn.mcc_digit3);
+      digit3 = (amf_config.guamfi.guamfi[0].plmn.mnc_digit2 << 4) |
+               (amf_config.guamfi.guamfi[0].plmn.mnc_digit1);
+    }
+    for (int i = 1; i < (blength(raw) - 3); i++) {
+      if ((raw->data[i] == digit1) && (raw->data[i + 1] == digit2) &&
+          (raw->data[i + 2] == digit3)) {
+        if (raw->data[i - 1] == 0x50) {
+          raw->data[i - 1] = 0x48;
+        }
+      }
+    }
+    dec_ret = aper_decode(NULL, &asn_DEF_Ngap_NGAP_PDU, (void**)&pdu,
+                          bdata(raw), blength(raw), 0, 0);
+    if (dec_ret.code == RC_OK) {
+      return 0;
+    }
     OAILOG_ERROR(LOG_NGAP, "Failed to decode PDU\n");
     return -1;
   }
