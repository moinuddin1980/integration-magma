1.
Create the script
---------------------------------------------------------------------
vagrant@magma-dev-focal:~$ cat FileCleanupCronJob.sh
#!bin/sh
# Delete the files in /var/core which are old then 1 day
echo "Clean up cronjob"
find /var/core/ -type f -mtime +1 -exec sudo rm -rf  {} +

# Delete the gz files in /var/log directory
find /var/log/*gz -type f -mtime +2 -exec sudo rm -rf  {} +
vagrant@magma-dev-focal:~$

2.
CPU and MEM Montiroing
--------------------------------------------------------------------
#!/bin/bash
CPU_MEM_UTL_LOG_FILE=/var/core/cpu-mem-log.txt
if [ ! -f "$CPU_MEM_UTL_LOG_FILE" ]
then
    sudo touch $CPU_MEM_UTL_LOG_FILE
fi

print_python_cpu_mem_usage() {
  echo "PRINTING FOR $1"
  process_id=$1

  PID_NEW_PROCESS=$(ps -eaf | grep python3 | grep $1 | awk 'NR==1{print $2}')
  if [[ -z PID_NEW_PROCESS ]]; then   echo "$1 DOESNOT EXISTS"; fi

  CPU_MEM_DUMP=$(ps -p $PID_NEW_PROCESS -o %cpu,%mem | awk NR==2)
  echo $CPU_MEM_DUMP : $1" ("$PID_NEW_PROCESS")" >> $CPU_MEM_UTL_LOG_FILE
}

print_c_cpu_mem_usage() {

  PID_MME=$(pidof mme)
  PID_SESSIOND=$(pidof sessiond)

  if [[ -z PID_MME ]]; then   echo "MME DOESNOT EXISTS"; fi
  if [[ -z PID_SESSIOND ]]; then   echo "SESSIOND DOESNOT EXISTS"; fi

  CPU_MEM_DUMP_MME=$(ps -p $PID_MME -o %cpu,%mem | awk NR==2)
  echo $CPU_MEM_DUMP_MME : mme" ("$PID_MME")" >> $CPU_MEM_UTL_LOG_FILE

  CPU_MEM_DUMP_SESSIOND=$(ps -p $PID_SESSIOND -o %cpu,%mem | awk NR==2)
  echo $CPU_MEM_DUMP_SESSIOND : sessiond" ("$PID_SESSIOND")" >> $CPU_MEM_UTL_LOG_FILE
}

echo " " >> $CPU_MEM_UTL_LOG_FILE
date >> $CPU_MEM_UTL_LOG_FILE
echo "CPU   MEM    PROCESS" >> $CPU_MEM_UTL_LOG_FILE
echo "=========================" >> $CPU_MEM_UTL_LOG_FILE

#Printing for Python Files
print_python_cpu_mem_usage magmad
print_python_cpu_mem_usage subscriberdb
print_python_cpu_mem_usage directoryd
print_python_cpu_mem_usage enodebd
print_python_cpu_mem_usage policydb
print_python_cpu_mem_usage state
print_python_cpu_mem_usage ctraced
print_python_cpu_mem_usage smsd
print_python_cpu_mem_usage eventd
print_python_cpu_mem_usage mobilityd
print_python_cpu_mem_usage pipelined

#Printing for C files
print_c_cpu_mem_usage

echo " ---- Finished Logging ----" >> $CPU_MEM_UTL_LOG_FILE

3.
Update the cronjob

 
 # Example of job definition:
 # .---------------- minute (0 - 59)
 # |  .------------- hour (0 - 23)
 # |  |  .---------- day of month (1 - 31)
 # |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
 # |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
 # |  |  |  |  |
# *  *  *  *  * user-name  command to be executed

--------------------------------------------------------------------
 -> crontab -e
sudo crontab -e

0 0 * * * /home/vagrant/FileCleanupCronJob.sh   <<<<< Take care of the path. Triggers every night
*/15 * * * * /home/vagrant/cpu_mem_util.sh      <<<<< Take care of path. Triggers every 15 minutes

3.
Start the cronjob
-------------------------------------------------------------------
sudo service cron reload

4.
Stop the cronjob
-------------------------------------------------------------------
sudo service cron stop

5.
Articles
-------------------------------------------------------------------
https://opensource.com/article/17/11/how-use-cron-linux
https://www.developerfiles.com/delete-files-on-linux-using-a-scheduled-cron-job/
