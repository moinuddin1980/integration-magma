From b992111491cbc88e8bd839e59cc186736b77137a Mon Sep 17 00:00:00 2001
From: Yogesh Pandey <yogesh@wavelabs.ai>
Date: Mon, 26 Dec 2022 17:49:57 +0000
Subject: [PATCH 1/2] feat(integration): Integrated with client

Signed-off-by: Yogesh Pandey <yogesh@wavelabs.ai>
---
 eMENU.py       | 19 ++++++++++++++-----
 eNB_LOCAL.py   | 32 ++++++++++++++++++++++----------
 eServerMgmt.py | 15 +++++++++++++++
 3 files changed, 51 insertions(+), 15 deletions(-)
 create mode 100644 eServerMgmt.py

diff --git a/eMENU.py b/eMENU.py
index d2fd7bd..50973f3 100644
--- a/eMENU.py
+++ b/eMENU.py
@@ -2,7 +2,10 @@
 import sys, os
 import datetime
 from eNB_LOCAL import *
- 
+
+# SERVER-CHANGES
+from eServerMgmt import eCONMGMT
+
 # Main definition - constants
 menu_actions  = {}  
 
@@ -479,9 +482,10 @@ def ProcessMenu(PDU, client, session_dict, msg):
                 if len(session_dict['SGW-GTP-ADDRESS']) > 0:
                     os.write(session_dict['PIPE-OUT-GTPU-ENCAPSULATE'],session_dict['GTP-U'] + session_dict['SGW-GTP-ADDRESS'][-1] + session_dict['SGW-TEID'][-1])
                     os.write(session_dict['PIPE-OUT-GTPU-DECAPSULATE'],session_dict['GTP-U'] + session_dict['SGW-GTP-ADDRESS'][-1] + b'\x00\x00\x00' + bytes([session_dict['RAB-ID'][-1]]))
-                if session_dict['PDN-ADDRESS-IPV4'] is not None:                     
-                    subprocess.call("route add -net 0.0.0.0/1 gw " + session_dict['PDN-ADDRESS-IPV4'], shell=True)    
-                    subprocess.call("route add -net 128.0.0.0/1 gw " + session_dict['PDN-ADDRESS-IPV4'], shell=True)
+                if session_dict['PDN-ADDRESS-IPV4'] is not None:
+                    # SERVER-CHANGES
+                    subprocess.call("route add -net 8.8.8.8/32 gw " + session_dict['PDN-ADDRESS-IPV4'], shell=True)    
+                    #subprocess.call("route add -net 128.0.0.0/1 gw " + session_dict['PDN-ADDRESS-IPV4'], shell=True)
                 if session_dict['PDN-ADDRESS-IPV6'] is not None:
                     subprocess.call("route -A inet6 add ::/1 dev tun" + str(session_dict['SESSION-TYPE-TUN']) , shell=True) 
                     subprocess.call("route -A inet6 add 8000::/1 dev tun" + str(session_dict['SESSION-TYPE-TUN'])  , shell=True)
@@ -546,6 +550,7 @@ def ProcessMenu(PDU, client, session_dict, msg):
     
     
 def print_log(session_dict, log_message):
+
     data = '  ' + str(datetime.datetime.now())
     log_message = str(log_message)
     if len(data + ': ' + log_message) > LOG_WIDTH:
@@ -555,9 +560,13 @@ def print_log(session_dict, log_message):
     else:
         session_dict['LOG'].append(data +': ' + log_message)
         
+    # SERVER-CHANGES
+    send_msg_to_client=str.encode(log_message)
+    eCONMGMT.conn_addr[0].sendall(send_msg_to_client)
+
     session_dict['LOG'] = session_dict['LOG'][-LOG_SIZE:]
     print_menu(session_dict['LOG'])
     
     return session_dict    
 
- 
\ No newline at end of file
+ 
diff --git a/eNB_LOCAL.py b/eNB_LOCAL.py
index 8a86f77..2691a53 100644
--- a/eNB_LOCAL.py
+++ b/eNB_LOCAL.py
@@ -20,6 +20,8 @@ import datetime
 
 import eNAS, eMENU
 
+# SERVER-CHANGES
+from eServerMgmt import eCONMGMT
 
 #tries to import all options for retrieving IMSI, and RES, CK and IK from USIM.
 #if all fails, return_imsi and return_res_ck_ik will return None, so local values will be used.
@@ -2428,7 +2430,7 @@ def encapsulate_gtp_u(args):
     socket_list.append(tap_fd)
     socket_list.append(pipe_in_gtpu_encapsulate)
     active = False
-    
+
     while True:
         read_sockets, write_sockets, error_sockets = select.select(socket_list, [], [])
         for sock in read_sockets:    
@@ -2501,7 +2503,9 @@ def decapsulate_gtp_u(args):
 ######################################################################################################################################
 def main():
 
-    
+    # SERVER-CHANGES
+    eCONMGMT.create_server_endpoint()
+
     session_dict = {}
 
     parser = OptionParser()    
@@ -2633,23 +2637,31 @@ def main():
   
     eMENU.print_menu(session_dict['LOG'])
   
-   
     socket_list = [sys.stdin ,client, dev_nbiot]
-    
+
+    #SERVER-CHANGES
+    if eCONMGMT.conn_addr[0]:
+        socket_list.append(eCONMGMT.conn_addr[0])
+
     while True:
         
         read_sockets, write_sockets, error_sockets = select.select(socket_list, [], [])
-        
+
         for sock in read_sockets:
             if sock == client:
                 PDU, client, session_dict = ProcessS1AP(PDU, client, session_dict)
                
-            elif sock == sys.stdin:        
-                msg = sys.stdin.readline()
-                
-                PDU, client, session_dict = eMENU.ProcessMenu(PDU, client, session_dict, msg)
-                
+            #elif sock == sys.stdin:
+            #    msg = sys.stdin.readline()
                 
+            #    PDU, client, session_dict = eMENU.ProcessMenu(PDU, client, session_dict, msg)
+
+            # SERVER-CHANGES
+            elif sock == eCONMGMT.conn_addr[0]:
+                msg = eCONMGMT.conn_addr[0].recv(eCONMGMT.server_buffer)
+
+                PDU, client, session_dict = eMENU.ProcessMenu(PDU, client, session_dict, msg.decode())
+
             elif sock == dev_nbiot:
                 session_dict['USER-DATA-CONTAINER'] = os.read(dev_nbiot, 1514)
                 
diff --git a/eServerMgmt.py b/eServerMgmt.py
new file mode 100644
index 0000000..8d4755f
--- /dev/null
+++ b/eServerMgmt.py
@@ -0,0 +1,15 @@
+import socket
+
+class eCONMGMT:
+    server_ep=("127.0.0.1", 65432)
+    server_ep_sock=0
+    server_buffer=1024
+    conn_addr=()
+
+    @classmethod
+    def create_server_endpoint(cls):
+        cls.server_ep_sock=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
+        cls.server_ep_sock.bind(cls.server_ep)
+        cls.server_ep_sock.listen()
+        conn, addr=cls.server_ep_sock.accept()
+        cls.conn_addr=(conn, addr)
-- 
2.25.1

