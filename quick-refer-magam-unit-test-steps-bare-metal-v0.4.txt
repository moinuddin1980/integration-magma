1. vagrant up distromagma --provider=virtualbox
2. git clone https://github.com/magma/magma.git
3. sudo bash agw_network_ubuntu.sh
4. vagrant reload  distromagma
5. Get the latest package from focal
  sudo su
  touch /etc/apt/sources.list.d/magma.list
  echo "deb https://artifactory.magmacore.org/artifactory/debian-test focal-ci main" >  /etc/apt/sources.list.d/magma.list
  wget -qO - https://artifactory.magmacore.org:443/artifactory/api/gpg/key/public | apt-key add -
  exit
 
6. Need to install ansible scripts to install packages

6.1 Changes in agw_install_ubuntu_vm.sh
------------------------------------------
vagrant@distro-magma:~/magma/lte/gateway/deploy$ git diff
diff --git a/lte/gateway/deploy/agw_install_ubuntu_vm.sh b/lte/gateway/deploy/agw_install_ubuntu_vm.sh
index db5b5a4676..62d315fc55 100755
--- a/lte/gateway/deploy/agw_install_ubuntu_vm.sh
+++ b/lte/gateway/deploy/agw_install_ubuntu_vm.sh
@@ -45,7 +45,8 @@ if [ "$MAGMA_INSTALLED" != "$SUCCESS_MESSAGE" ]; then
   127.0.0.1 ansible_connection=local" > $DEPLOY_PATH/agw_hosts

   # install magma and its dependencies including OVS.
-  su - $MAGMA_USER -c "ansible-playbook -e \"MAGMA_ROOT='/home/$MAGMA_USER/magma' OUTPUT_DIR='/tmp'\" -i $DEPLOY_PATH/agw_hosts -e \"use_master=True\" $DEPLOY_PATH/magma_deploy.yml"
+  su - $MAGMA_USER -c "ANSIBLE_CONFIG=/home/$MAGMA_USER/magma/lte/gateway/ansible.cfg ansible-playbook -e 'ansible_user=$MAGMA_USER' -e \"MAGMA_ROOT='/home/$MAGMA_USER/magma' OUTPUT_DIR='/tmp'\" -i $DEPLOY_PATH/agw_hosts $DEPLOY_PATH/magma_dev_focal.yml"
+wget https://raw.githubusercontent.com/magma/magma/"$MAGMA_VERSION"/lte/gateway/deploy/agw_post_install_ubuntu.sh -P /root/

   echo "Cleanup temp files"
   cd /root || exit

6.2 Changes in the magma_dev_focal
------------------------------------------
diff --git a/lte/gateway/deploy/magma_dev_focal.yml b/lte/gateway/deploy/magma_dev_focal.yml
index 25654266cd..ddc80b429a 100644
--- a/lte/gateway/deploy/magma_dev_focal.yml
+++ b/lte/gateway/deploy/magma_dev_focal.yml
@@ -13,7 +13,8 @@
 ################################################################################

 - name: Set up Magma dev build environment on a local machine
-  hosts: focal_dev
+  hosts: localhost
+  connection: local
   become: yes

   vars:
vagrant@distro-magma:~/magma/lte/gateway/deploy$


7. Update the packages

 - sudo apt-get install -y   sudo   curl   wget   unzip   cmake   git   build-essential   autoconf   libtool   pkg-config   libgflags-dev   libc++-dev   protobuf-compiler   ninja-build   autogen   ccache   libprotoc-dev   libxml2-dev   libxslt-dev   libyaml-cpp-dev   nlohmann-json3-dev   libgoogle-glog-dev   libsctp-dev   libpcap-dev   libmnl-dev   uuid-dev   python3-pip   libcurl4-openssl-dev   libdouble-conversion-dev   libboost-chrono-dev   libboost-context-dev   libboost-program-options-dev   libboost-filesystem-dev   libboost-regex-dev   check   libssl-dev   libsctp-dev   libtspi-dev   libconfig-dev   libgmp3-dev   libczmq-dev   libsqlite3-dev
 - sudo  apt-get install -y   libfolly-dev   oai-asn1c   oai-freediameter   oai-gnutls   oai-nettle   magma-cpp-redis   magma-libfluid   grpc-dev   prometheus-cpp-dev   liblfds710
 - sudo apt-get install -y libgtest-dev
 - sudo apt install -y libgmock-dev
 - sudo apt-get install -y   td-agent-bit   libopenvswitch   openvswitch-datapath-dkms   openvswitch-common   openvswitch-switch   bcc-tools   wireguard
 - sudo bash agw_install_ubuntu_vm.sh

7.1 If all goes well OVS will be installed
------------------------------------------
vagrant@distro-magma:~/magma/lte/gateway/deploy$ sudo ovs-vsctl show
sudo: unable to resolve host magma-dev: Name or service not known
e87d20b1-4204-44f0-bdd5-127d5be5e810
    Bridge gtp_br0
        Port ipfix0
            Interface ipfix0
                type: internal
        Port gtp_br0
            Interface gtp_br0
                type: internal
        Port gtp0
            Interface gtp0
                type: gtpu
                options: {key=flow, remote_ip=flow}
        Port li_port
            Interface li_port
                type: internal
        Port mtr0
            Interface mtr0
                type: internal
        Port patch-up
            Interface patch-up
                type: patch
                options: {peer=patch-agw}
        Port proxy_port
            Interface proxy_port
    Bridge uplink_br0
        Port patch-agw
            Interface patch-agw
                type: patch
                options: {peer=patch-up}
        Port uplink_br0
            Interface uplink_br0
                type: internal
        Port dhcp0
            Interface dhcp0
                type: internal
    ovs_version: "2.15.4"
vagrant@distro-magma:~/magma/lte/gateway/

sudo apt-get install -y libtins-dev

8. Setting up the go variable

wget https://artifactory.magmacore.org/artifactory/generic/go1.18.3.linux-amd64.tar.gz
sudo rm -rf /usr/local/go && sudo tar -C /usr/local -xzf go1.18.3.linux-amd64.tar.gz
export PATH=$PATH:/usr/local/go/bin

9. Setting the Path for variable
export PATH=$PATH:/usr/local/go/bin
export MAGMA_ROOT=/home/$USER/magma
export C_BUILD=/home/$USER/build/c
export PYTHON_BUILD=/home/$USER/build/pythonsudo su
export GO_BUILD=/home/vagrant/go/bin

10. Install the left over packages
sudo apt-get install -y openjdk-8-jre-headless openjdk-8-jdk
sudo apt-get install -y ruby ruby-dev build-essential rubygems
sudo gem install fpm
chmod 777 /home/vagrant/magma/.cache/

11. Set additional varaibles
- ls /usr/bin/java  <<< Make sure Java is installed
- mkdir ~/.pipcache/
- export PIP_CACHE_HOME=~/.pipcache/
- export SWAGGER_CODEGEN_DIR=/var/tmp/codegen/modules/swagger-codegen-cli/target
- export SWAGGER_CODEGEN_JAR=${SWAGGER_CODEGEN_DIR}/swagger-codegen-cli.jar
- export CODEGEN_VERSION=2.2.3
- mkdir -p ${SWAGGER_CODEGEN_DIR};
- wget --no-verbose https://repo1.maven.org/maven2/io/swagger/swagger-codegen-cli/${CODEGEN_VERSION}/swagger-codegen-cli-${CODEGEN_VERSION}.jar -O ${SWAGGER_CODEGEN_JAR}

cd /home/vagrant/magma/lte/gateway
./release/build-magma.sh

12. With these configurations all variables will be set for unit test (make test_python

